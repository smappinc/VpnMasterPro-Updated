package com.smappinc.vpnmaster.pro.Record_Time;import android.annotation.SuppressLint;import android.app.Service;import android.content.Intent;import android.os.IBinder;import androidx.annotation.Nullable;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import java.util.TimeZone;import java.util.concurrent.TimeUnit;public class Connection_Timer extends Service {    public static Date start_time = null;    public static Date end_time = null;    static public String timer_value;    @Override    public void onCreate() {        super.onCreate();        @SuppressLint("SimpleDateFormat") SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");        dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));        start_time = Calendar.getInstance().getTime();    }    @Override    public void onDestroy() {        super.onDestroy();    }    @Nullable    @Override    public IBinder onBind(Intent intent) {        return null;    }    public static String getTimer_value() {        @SuppressLint("SimpleDateFormat") SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");        dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));        end_time = Calendar.getInstance().getTime();        if (start_time != null && end_time != null) {            long difference = end_time.getTime() - start_time.getTime();            long seconds = TimeUnit.MILLISECONDS.toSeconds(difference);            long minutes = TimeUnit.MILLISECONDS.toMinutes(difference);            long hours = TimeUnit.MILLISECONDS.toHours(difference);            if (seconds >= 60) {                seconds = seconds % 60;            }            if (minutes >= 60) {                minutes = minutes % 60;            }          //  timer_value = formatTime(hours)  + "h:" + formatTime(minutes) +"m" ;            timer_value = formatTime(hours)  + "h" + ":" +formatTime(minutes) +"m" + ":" + formatTime(seconds)+"s";        }        return timer_value;    }    static public String formatTime(long value) {        if (String.valueOf(value).length() == 0)            return "00";        else if (String.valueOf(value).length() == 1)            return "0" + value;        else if (String.valueOf(value).length() == 2)            return String.valueOf(value);        else            return "00";    }}